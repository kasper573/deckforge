datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Type"
  useDecimalJs          = true
  prismaJsonNullability = true
}

model User {
  userId       String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String   @unique
  email        String   @unique
  passwordHash String
  accessLevel  Int      @default(1)
  games        Game[]
}

model Game {
  gameId    String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [userId], onDelete: Cascade)
  decks     Deck[]
  cards     Card[]
}

model Deck {
  deckId    String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  gameId    String
  game      Game     @relation(fields: [gameId], references: [gameId], onDelete: Cascade)
  cards     Card[]
}

model Card {
  cardId    String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  gameId    String
  game      Game     @relation(fields: [gameId], references: [gameId], onDelete: Cascade)
  deckId    String
  deck      Deck     @relation(fields: [deckId], references: [deckId], onDelete: Cascade)
}
